/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.8
 * Generated at: 2025-05-09 16:04:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class DoctoerDashboardCss_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("/* Custom Colors */\r\n");
      out.write(".bg-dark-blue {\r\n");
      out.write("  background-color: #001f3f;\r\n");
      out.write("}\r\n");
      out.write(".text-white {\r\n");
      out.write("  color: #ffffff;\r\n");
      out.write("}\r\n");
      out.write(".hover\\:bg-dark-blue:hover {\r\n");
      out.write("  background-color: #001737;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Buttons */\r\n");
      out.write(".btn {\r\n");
      out.write("  padding: 0.5rem 1rem;\r\n");
      out.write("  border-radius: 0.375rem;\r\n");
      out.write("  font-weight: 500;\r\n");
      out.write("  display: inline-flex;\r\n");
      out.write("  align-items: center;\r\n");
      out.write("  justify-content: center;\r\n");
      out.write("  gap: 0.5rem;\r\n");
      out.write("  transition: background-color 0.2s ease-in-out;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Primary (Green) */\r\n");
      out.write(".btn-primary {\r\n");
      out.write("  background-color: #16a34a; /* Tailwind green-600 */\r\n");
      out.write("  color: #ffffff;\r\n");
      out.write("}\r\n");
      out.write(".btn-primary:hover {\r\n");
      out.write("  background-color: #15803d; /* Tailwind green-700 */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Edit (Blue) */\r\n");
      out.write(".btn-edit {\r\n");
      out.write("  background-color: #3b82f6; /* Tailwind blue-500 */\r\n");
      out.write("  color: #ffffff;\r\n");
      out.write("}\r\n");
      out.write(".btn-edit:hover {\r\n");
      out.write("  background-color: #2563eb; /* Tailwind blue-600 */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Delete (Red) */\r\n");
      out.write(".btn-delete {\r\n");
      out.write("  background-color: #ef4444; /* Tailwind red-500 */\r\n");
      out.write("  color: #ffffff;\r\n");
      out.write("}\r\n");
      out.write(".btn-delete:hover {\r\n");
      out.write("  background-color: #dc2626; /* Tailwind red-600 */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Table Styling */\r\n");
      out.write(".table {\r\n");
      out.write("  width: 100%;\r\n");
      out.write("  background-color: #ffffff;\r\n");
      out.write("  border-radius: 0.375rem; /* Rounded */\r\n");
      out.write("  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n");
      out.write("  border-collapse: collapse;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".table thead {\r\n");
      out.write("  background-color: #e5e7eb; /* Tailwind gray-200 */\r\n");
      out.write("  color: #4b5563;            /* Tailwind gray-600 */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".table th, .table td {\r\n");
      out.write("  padding: 0.5rem 1rem;\r\n");
      out.write("  text-align: left;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".table tbody tr {\r\n");
      out.write("  border-top: 1px solid #e5e7eb;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
